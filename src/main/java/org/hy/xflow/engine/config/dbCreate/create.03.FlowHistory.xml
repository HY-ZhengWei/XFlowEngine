<?xml version="1.0" encoding="UTF-8"?>

<config>

    <import name="sqls"            class="java.util.ArrayList" />
    <import name="sql"             class="org.hy.common.xml.XSQL" />
    
    
    
    <!-- 工作流实例历史数据的初始化对象创建（自动创建）的相关SQL -->
    <sqls>
    
        <sql id="XSQL_Create_TFlowInfo_History">
        
            <dataSourceGroup ref="DSG_XFlow" />
            
            <content if="ORACLE == DSG_XFlow.getDbProductType">
                <![CDATA[
                CREATE TABLE TFlowInfo_History
                (
                 workID             VARCHAR2(64)                     NOT NULL
                ,workFatherID       VARCHAR2(64)                     
                ,flowTemplateID     VARCHAR2(64)                     NOT NULL
                ,serviceDataID      VARCHAR2(64)
                ,createrID          VARCHAR2(64)                     NOT NULL
                ,creater            NVARCHAR2(128)
                ,createOrgID        VARCHAR2(64)
                ,createOrg          NVARCHAR2(128)
                ,createTime         DATE                             NOT NULL
                ,lastUserID         VARCHAR2(64)                     NOT NULL
                ,lastUser           NVARCHAR2(128)
                ,lastTime           DATE
                ,lastOrgID          VARCHAR2(64)
                ,lastOrg            NVARCHAR2(128)
                ,lastProcessID      VARCHAR2(64)                     NOT NULL
                ,isValid            NUMBER(1)                        NOT NULL
                ,isDelete           NUMBER(1)                        NOT NULL
                );/
                
                ALTER TABLE TFlowInfo_History ADD CONSTRAINT PK_TFlowInfo_History PRIMARY KEY (workID);/
                
                COMMENT ON TABLE  TFlowInfo_History                       IS '工作流信息表';/
                COMMENT ON COLUMN TFlowInfo_History.workID                IS '工作流实例ID';/
                COMMENT ON COLUMN TFlowInfo_History.workFatherID          IS '工作流的父实例ID，可为空';/
                COMMENT ON COLUMN TFlowInfo_History.flowTemplateID        IS '工作流的模板ID';/
                COMMENT ON COLUMN TFlowInfo_History.serviceDataID         IS '第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息';/
                COMMENT ON COLUMN TFlowInfo_History.createrID             IS '创建人员ID';/
                COMMENT ON COLUMN TFlowInfo_History.creater               IS '创建人员名称';/
                COMMENT ON COLUMN TFlowInfo_History.createOrgID           IS '创建部门ID';/
                COMMENT ON COLUMN TFlowInfo_History.createOrg             IS '创建部门名称';/
                COMMENT ON COLUMN TFlowInfo_History.createTime            IS '创建时间';/
                COMMENT ON COLUMN TFlowInfo_History.lastUserID            IS '最后修改人员ID';/
                COMMENT ON COLUMN TFlowInfo_History.lastUser              IS '最后修改人员名称';/
                COMMENT ON COLUMN TFlowInfo_History.lastTime              IS '最后修改时间';/
                COMMENT ON COLUMN TFlowInfo_History.lastOrgID             IS '最后修改部门ID';/
                COMMENT ON COLUMN TFlowInfo_History.lastOrg               IS '最后修改部门名称';/
                COMMENT ON COLUMN TFlowInfo_History.lastProcessID         IS '最后修改的过程ID';/
                COMMENT ON COLUMN TFlowInfo_History.isValid               IS '是否有效标记(0:无效；1:有效)';/
                COMMENT ON COLUMN TFlowInfo_History.isDelete              IS '是否删除标记(0:未删除；1:已删除)';/
                ]]>
            </content>
            
            <content if="MYSQL == DSG_XFlow.getDbProductType">
                <![CDATA[
                CREATE TABLE TFlowInfo_History
                (
                 workID             varchar(64)                     NOT NULL comment '工作流实例ID'
                ,workFatherID       varchar(64)                              comment '工作流的父实例ID，可为空'
                ,flowTemplateID     varchar(64)                     NOT NULL comment '工作流的模板ID'
                ,serviceDataID      varchar(64)                              comment '第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息'
                ,createrID          varchar(64)                     NOT NULL comment '创建人员ID'
                ,creater            varchar(128)                             comment '创建人员名称'
                ,createOrgID        varchar(64)                              comment '创建部门ID'
                ,createOrg          varchar(128)                             comment '创建部门名称'
                ,createTime         datetime                        NOT NULL comment '创建时间'
                ,lastUserID         varchar(64)                     NOT NULL comment '最后修改人员ID'
                ,lastUser           varchar(128)                             comment '最后修改人员名称'
                ,lastTime           datetime                                 comment '最后修改时间'
                ,lastOrgID          varchar(64)                              comment '最后修改部门ID'
                ,lastOrg            varchar(128)                             comment '最后修改部门名称'
                ,lastProcessID      varchar(64)                     NOT NULL comment '最后修改的过程ID'
                ,isValid            int(1)                          NOT NULL comment '是否有效标记(0:无效；1:有效)'
                ,isDelete           int(1)                          NOT NULL comment '是否删除标记(0:未删除；1:已删除)'
                );/
                
                ALTER TABLE TFlowInfo_History ADD CONSTRAINT PK_TFlowInfo_History PRIMARY KEY (workID);/
                
                ALTER TABLE  TFlowInfo_History     COMMENT                  = '工作流信息表';/
                ]]>
            </content>
            
            <content if="SQLSERVER == DSG_XFlow.getDbProductType">
                <![CDATA[
                CREATE TABLE TFlowInfo_History
                (
                 workID             VARCHAR(64)                      NOT NULL
                ,workFatherID       VARCHAR(64)                     
                ,flowTemplateID     VARCHAR(64)                      NOT NULL
                ,serviceDataID      VARCHAR(64)
                ,createrID          VARCHAR(64)                      NOT NULL
                ,creater            NVARCHAR(128)
                ,createOrgID        VARCHAR(64)
                ,createOrg          NVARCHAR(128)
                ,createTime         DATETIME                         NOT NULL
                ,lastUserID         VARCHAR(64)                      NOT NULL
                ,lastUser           NVARCHAR(128)
                ,lastTime           DATETIME
                ,lastOrgID          VARCHAR(64)
                ,lastOrg            NVARCHAR(128)
                ,lastProcessID      VARCHAR(64)                      NOT NULL
                ,isValid            INT                              NOT NULL
                ,isDelete           INT                              NOT NULL
                );/
                
                ALTER TABLE TFlowInfo_History ADD CONSTRAINT PK_TFlowInfo_History PRIMARY KEY (workID);/
                
                EXEC P_TableComment  TFlowInfo_History                     ,'工作流信息表';/
                EXEC P_ColumnComment TFlowInfo_History ,workID             ,'工作流实例ID';/
                EXEC P_ColumnComment TFlowInfo_History ,workFatherID       ,'工作流的父实例ID，可为空';/
                EXEC P_ColumnComment TFlowInfo_History ,flowTemplateID     ,'工作流的模板ID';/
                EXEC P_ColumnComment TFlowInfo_History ,serviceDataID      ,'第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息';/
                EXEC P_ColumnComment TFlowInfo_History ,createrID          ,'创建人员ID';/
                EXEC P_ColumnComment TFlowInfo_History ,creater            ,'创建人员名称';/
                EXEC P_ColumnComment TFlowInfo_History ,createOrgID        ,'创建部门ID';/
                EXEC P_ColumnComment TFlowInfo_History ,createOrg          ,'创建部门名称';/
                EXEC P_ColumnComment TFlowInfo_History ,createTime         ,'创建时间';/
                EXEC P_ColumnComment TFlowInfo_History ,lastUserID         ,'最后修改人员ID';/
                EXEC P_ColumnComment TFlowInfo_History ,lastUser           ,'最后修改人员名称';/
                EXEC P_ColumnComment TFlowInfo_History ,lastTime           ,'最后修改时间';/
                EXEC P_ColumnComment TFlowInfo_History ,lastOrgID          ,'最后修改部门ID';/
                EXEC P_ColumnComment TFlowInfo_History ,lastOrg            ,'最后修改部门名称';/
                EXEC P_ColumnComment TFlowInfo_History ,lastProcessID      ,'最后修改的过程ID';/
                EXEC P_ColumnComment TFlowInfo_History ,isValid            ,'是否有效标记(0:无效；1:有效)';/
                EXEC P_ColumnComment TFlowInfo_History ,isDelete           ,'是否删除标记(0:未删除；1:已删除)';/
                ]]>
            </content>
            
            <comment>工作流信息表(历史表)</comment>
            <create>TFlowInfo_History</create>
            
        </sql>
        
        
        
        <sql id="XSQL_Create_TProcess_History">
        
            <dataSourceGroup ref="DSG_XFlow" />
            
            <content if="ORACLE == DSG_XFlow.getDbProductType">
                <![CDATA[
                CREATE TABLE TProcess_History
                (
                 processID              VARCHAR2(64)                     NOT NULL
                ,workID                 VARCHAR2(64)                     NOT NULL
                ,serviceDataID          VARCHAR2(64)
                ,splitProcessID         VARCHAR2(64)
                ,processNo              NUMBER(10)                       NOT NULL
                ,currentActivityID      VARCHAR2(64)                     NOT NULL
                ,currentActivityCode    VARCHAR2(64)                     NOT NULL
                ,currentActivityName    NVARCHAR2(64)                    NOT NULL
                ,previousProcessID      VARCHAR2(64)
                ,previousActivityID     VARCHAR2(64)
                ,previousActivityCode   VARCHAR2(64)
                ,previousActivityName   NVARCHAR2(64)
                ,previousOperateTypeID  VARCHAR2(64)
                ,nextProcessID          VARCHAR2(4000)
                ,nextActivityID         VARCHAR2(4000)
                ,nextActivityCode       VARCHAR2(4000)
                ,nextActivityName       NVARCHAR2(4000)
                ,createrID              VARCHAR2(64)                     NOT NULL
                ,creater                NVARCHAR2(128)
                ,createOrgID            VARCHAR2(64)
                ,createOrg              NVARCHAR2(128)
                ,createTime             DATE                             NOT NULL
                ,summary                NUMBER(18 ,4)
                ,summaryPass            NUMBER(18 ,4)
                ,counter                NUMBER(10)
                ,counterPass            NUMBER(10)
                ,passType               VARCHAR2(3)
                ,limitUserID            VARCHAR2(64)
                ,limitOrgID             VARCHAR2(64)
                ,limitTime              DATE
                ,operateTime            DATE
                ,operateTimeLen         NUMBER(10)
                ,operateTypeID          VARCHAR2(64)
                ,operateType            NVARCHAR2(128)
                ,operateUserID          VARCHAR2(64)
                ,operateUser            NVARCHAR2(128)
                ,operateOrgID           VARCHAR2(64)
                ,operateOrg             NVARCHAR2(128)
                ,operateFiles           VARCHAR2(2000)
                ,operateDatas           VARCHAR2(2000)
                ,infoComment            NVARCHAR2(2000)
                );/
                
                ALTER TABLE TProcess_History ADD CONSTRAINT PK_TProcess_History PRIMARY KEY (processID);/
                
                COMMENT ON TABLE  TProcess_History                       IS '工作流过程表';/
                COMMENT ON COLUMN TProcess_History.processID             IS '工作流的过程ID';/
                COMMENT ON COLUMN TProcess_History.workID                IS '工作流实例ID';/
                COMMENT ON COLUMN TProcess_History.serviceDataID         IS '第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息';/
                COMMENT ON COLUMN TProcess_History.splitProcessID        IS '分单前的过程ID。合单前持续记录ID值。不一定与previousProcessID同值';/
                COMMENT ON COLUMN TProcess_History.processNo             IS '工作流的过程编号。下标从1开始';/
                COMMENT ON COLUMN TProcess_History.currentActivityID     IS '当前活动ID';/
                COMMENT ON COLUMN TProcess_History.currentActivityCode   IS '当前活动编码';/
                COMMENT ON COLUMN TProcess_History.currentActivityName   IS '当前活动名称';/
                COMMENT ON COLUMN TProcess_History.previousProcessID     IS '上一过程ID';/
                COMMENT ON COLUMN TProcess_History.previousActivityID    IS '上一活动ID';/
                COMMENT ON COLUMN TProcess_History.previousActivityCode  IS '上一活动编码';/
                COMMENT ON COLUMN TProcess_History.previousActivityName  IS '上一活动名称';/
                COMMENT ON COLUMN TProcess_History.previousOperateTypeID IS '上一活动的操作类型ID';/
                COMMENT ON COLUMN TProcess_History.nextProcessID         IS '下一过程ID。分单时记录多个ID，用逗号分隔';/
                COMMENT ON COLUMN TProcess_History.nextActivityID        IS '下一活动ID。分单时记录多个ID，用逗号分隔';/
                COMMENT ON COLUMN TProcess_History.nextActivityCode      IS '下一活动编码。分单时记录多个ID，用逗号分隔';/
                COMMENT ON COLUMN TProcess_History.nextActivityName      IS '下一活动名称。分单时记录多个ID，用逗号分隔';/
                COMMENT ON COLUMN TProcess_History.createrID             IS '创建人员ID';/
                COMMENT ON COLUMN TProcess_History.creater               IS '创建人员名称';/
                COMMENT ON COLUMN TProcess_History.createOrgID           IS '创建部门ID';/
                COMMENT ON COLUMN TProcess_History.createOrg             IS '创建部门名称';/
                COMMENT ON COLUMN TProcess_History.createTime            IS '创建时间';/
                COMMENT ON COLUMN TProcess_History.summary               IS '汇总值';/
                COMMENT ON COLUMN TProcess_History.summaryPass           IS '汇总通过值。当大于等于此值后，才能继续向下流转';/
                COMMENT ON COLUMN TProcess_History.counter               IS '提交汇的人数';/
                COMMENT ON COLUMN TProcess_History.counterPass           IS '汇总人数的限制。当大于等于此值后，才能继续向下流转';/
                COMMENT ON COLUMN TProcess_History.passType              IS '汇总类型。指summaryPass和counterPass的关系是与，还是或';/
                COMMENT ON COLUMN TProcess_History.limitUserID           IS '限制操作人员ID';/
                COMMENT ON COLUMN TProcess_History.limitOrgID            IS '限制操作部门ID';/
                COMMENT ON COLUMN TProcess_History.limitTime             IS '限制操作时间';/
                COMMENT ON COLUMN TProcess_History.operateTime           IS '操作时间';/
                COMMENT ON COLUMN TProcess_History.operateTimeLen        IS '操作时长（单位：秒）';/
                COMMENT ON COLUMN TProcess_History.operateTypeID         IS '操作类型ID';/
                COMMENT ON COLUMN TProcess_History.operateType           IS '操作类型名称';/
                COMMENT ON COLUMN TProcess_History.operateUserID         IS '操作人员ID';/
                COMMENT ON COLUMN TProcess_History.operateUser           IS '操作人员名称';/
                COMMENT ON COLUMN TProcess_History.operateOrgID          IS '操作部门ID';/
                COMMENT ON COLUMN TProcess_History.operateOrg            IS '操作部门名称';/
                COMMENT ON COLUMN TProcess_History.operateFiles          IS '操作文件信息，由第三方使用者定义其内容（拓展性数据）';/
                COMMENT ON COLUMN TProcess_History.operateDatas          IS '操作数据信息，由第三方使用者定义其内容（拓展性数据）';/
                COMMENT ON COLUMN TProcess_History.infoComment           IS '备注说明';/
                ]]>
            </content>
            
            <content if="MYSQL == DSG_XFlow.getDbProductType">
                <![CDATA[
                CREATE TABLE TProcess_History
                (
                 processID              VARCHAR(64)                     NOT NULL COMMENT '工作流的过程ID'
                ,workID                 VARCHAR(64)                     NOT NULL COMMENT '工作流实例ID'
                ,serviceDataID          VARCHAR(64)                              COMMENT '第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息'
                ,splitProcessID         VARCHAR(64)                              COMMENT '分单前的过程ID。合单前持续记录ID值。不一定与previousProcessID同值'
                ,processNo              INT(10)                         NOT NULL COMMENT '工作流的过程编号。下标从1开始'
                ,currentActivityID      VARCHAR(64)                     NOT NULL COMMENT '当前活动ID'
                ,currentActivityCode    VARCHAR(64)                     NOT NULL COMMENT '当前活动编码'
                ,currentActivityName    VARCHAR(64)                     NOT NULL COMMENT '当前活动名称'
                ,previousProcessID      VARCHAR(64)                              COMMENT '上一过程ID'
                ,previousActivityID     VARCHAR(64)                              COMMENT '上一活动ID'
                ,previousActivityCode   VARCHAR(64)                              COMMENT '上一活动编码'
                ,previousActivityName   VARCHAR(64)                              COMMENT '上一活动名称'
                ,previousOperateTypeID  VARCHAR(64)                              COMMENT '上一活动的操作类型ID'
                ,nextProcessID          VARCHAR(4000)                            COMMENT '下一过程ID。分单时记录多个ID，用逗号分隔'
                ,nextActivityID         VARCHAR(4000)                            COMMENT '下一活动ID。分单时记录多个ID，用逗号分隔'
                ,nextActivityCode       VARCHAR(4000)                            COMMENT '下一活动编码。分单时记录多个ID，用逗号分隔'
                ,nextActivityName       VARCHAR(4000)                            COMMENT '下一活动名称。分单时记录多个ID，用逗号分隔'
                ,createrID              VARCHAR(64)                     NOT NULL COMMENT '创建人员ID'
                ,creater                VARCHAR(128)                             COMMENT '创建人员名称'
                ,createOrgID            VARCHAR(64)                              COMMENT '创建部门ID'
                ,createOrg              VARCHAR(128)                             COMMENT '创建部门名称'
                ,createTime             DATETIME                        NOT NULL COMMENT '创建时间'
                ,summary                DECIMAL(18 ,4)                           COMMENT '汇总值'
                ,summaryPass            DECIMAL(18 ,4)                           COMMENT '汇总通过值。当大于等于此值后，才能继续向下流转'
                ,counter                INT(10)                                  COMMENT '提交汇的人数'
                ,counterPass            INT(10)                                  COMMENT '汇总人数的限制。当大于等于此值后，才能继续向下流转'
                ,passType               VARCHAR(3)                               COMMENT '汇总类型。指summaryPass和counterPass的关系是与，还是或'
                ,limitUserID            VARCHAR(64)                              COMMENT '限制操作人员ID'
                ,limitOrgID             VARCHAR(64)                              COMMENT '限制操作部门ID'
                ,limitTime              DATETIME                                 COMMENT '限制操作时间'
                ,operateTime            DATETIME                                 COMMENT '操作时间'
                ,operateTimeLen         INT(10)                                  COMMENT '操作时长（单位：秒）'
                ,operateTypeID          VARCHAR(64)                              COMMENT '操作类型ID'
                ,operateType            VARCHAR(128)                             COMMENT '操作类型名称'
                ,operateUserID          VARCHAR(64)                              COMMENT '操作人员ID'
                ,operateUser            VARCHAR(128)                             COMMENT '操作人员名称'
                ,operateOrgID           VARCHAR(64)                              COMMENT '操作部门ID'
                ,operateOrg             VARCHAR(128)                             COMMENT '操作部门名称'
                ,operateFiles           VARCHAR(2000)                            COMMENT '操作文件信息，由第三方使用者定义其内容（拓展性数据）'
                ,operateDatas           VARCHAR(2000)                            COMMENT '操作数据信息，由第三方使用者定义其内容（拓展性数据）'
                ,infoComment            VARCHAR(2000)                            COMMENT '备注说明'
                );/
                
                ALTER TABLE TProcess_History ADD CONSTRAINT PK_TProcess_History PRIMARY KEY (processID);/
                
                ALTER TABLE  TProcess_History    COMMENT                   = '工作流过程表';/
                ]]>
            </content>
            
            <content if="SQLSERVER == DSG_XFlow.getDbProductType">
                <![CDATA[
                CREATE TABLE TProcess_History
                (
                 processID               VARCHAR(64)                      NOT NULL
                ,workID                  VARCHAR(64)                      NOT NULL
                ,serviceDataID           VARCHAR(64)
                ,splitProcessID          VARCHAR(64)
                ,processNo               INT                              NOT NULL
                ,currentActivityID       VARCHAR(64)                      NOT NULL
                ,currentActivityCode     VARCHAR(64)                      NOT NULL
                ,currentActivityName     NVARCHAR(64)                     NOT NULL
                ,previousProcessID       VARCHAR(64)
                ,previousActivityID      VARCHAR(64)
                ,previousActivityCode    VARCHAR(64)
                ,previousActivityName    NVARCHAR(64)
                ,previousOperateTypeID   VARCHAR(64)
                ,nextProcessID           VARCHAR(4000)
                ,nextActivityID          VARCHAR(4000)
                ,nextActivityCode        VARCHAR(4000)
                ,nextActivityName        NVARCHAR(4000)
                ,createrID               VARCHAR(64)                      NOT NULL
                ,creater                 NVARCHAR(128)
                ,createOrgID             VARCHAR(64)
                ,createOrg               NVARCHAR(128)
                ,createTime              DATETIME                         NOT NULL
                ,summary                 DECIMAL(18 ,4)
                ,summaryPass             DECIMAL(18 ,4)
                ,counter                 INT
                ,counterPass             INT
                ,passType                VARCHAR(3)
                ,limitUserID             VARCHAR(64)
                ,limitOrgID              VARCHAR(64)
                ,limitTime               DATETIME
                ,operateTime             DATETIME
                ,operateTimeLen          INT
                ,operateTypeID           VARCHAR(64)
                ,operateType             NVARCHAR(128)
                ,operateUserID           VARCHAR(64)
                ,operateUser             NVARCHAR(128)
                ,operateOrgID            VARCHAR(64)
                ,operateOrg              NVARCHAR(128)
                ,operateFiles            VARCHAR(2000)
                ,operateDatas            VARCHAR(2000)
                ,infoComment             NVARCHAR(2000)
                );/
                
                ALTER TABLE TProcess_History ADD CONSTRAINT PK_TProcess_History PRIMARY KEY (processID);/
                
                EXEC P_TableComment  TProcess_History                        ,'工作流过程表';/
                EXEC P_ColumnComment TProcess_History ,processID             ,'工作流的过程ID';/
                EXEC P_ColumnComment TProcess_History ,workID                ,'工作流实例ID';/
                EXEC P_ColumnComment TProcess_History ,serviceDataID         ,'第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息';/
                EXEC P_ColumnComment TProcess_History ,splitProcessID        ,'分单前的过程ID。合单前持续记录ID值。不一定与previousProcessID同值';/
                EXEC P_ColumnComment TProcess_History ,processNo             ,'工作流的过程编号。下标从1开始';/
                EXEC P_ColumnComment TProcess_History ,currentActivityID     ,'当前活动ID';/
                EXEC P_ColumnComment TProcess_History ,currentActivityCode   ,'当前活动编码';/
                EXEC P_ColumnComment TProcess_History ,currentActivityName   ,'当前活动名称';/
                EXEC P_ColumnComment TProcess_History ,previousProcessID     ,'上一过程ID';/
                EXEC P_ColumnComment TProcess_History ,previousActivityID    ,'上一活动ID';/
                EXEC P_ColumnComment TProcess_History ,previousActivityCode  ,'上一活动编码';/
                EXEC P_ColumnComment TProcess_History ,previousActivityName  ,'上一活动名称';/
                EXEC P_ColumnComment TProcess_History ,previousOperateTypeID ,'上一活动的操作类型ID';/
                EXEC P_ColumnComment TProcess_History ,nextProcessID         ,'下一过程ID。分单时记录多个ID，用逗号分隔';/
                EXEC P_ColumnComment TProcess_History ,nextActivityID        ,'下一活动ID。分单时记录多个ID，用逗号分隔';/
                EXEC P_ColumnComment TProcess_History ,nextActivityCode      ,'下一活动编码。分单时记录多个ID，用逗号分隔';/
                EXEC P_ColumnComment TProcess_History ,nextActivityName      ,'下一活动名称。分单时记录多个ID，用逗号分隔';/
                EXEC P_ColumnComment TProcess_History ,createrID             ,'创建人员ID';/
                EXEC P_ColumnComment TProcess_History ,creater               ,'创建人员名称';/
                EXEC P_ColumnComment TProcess_History ,createOrgID           ,'创建部门ID';/
                EXEC P_ColumnComment TProcess_History ,createOrg             ,'创建部门名称';/
                EXEC P_ColumnComment TProcess_History ,createTime            ,'创建时间';/
                EXEC P_ColumnComment TProcess_History ,summary               ,'汇总值';/
                EXEC P_ColumnComment TProcess_History ,summaryPass           ,'汇总通过值。当大于等于此值后，才能继续向下流转';/
                EXEC P_ColumnComment TProcess_History ,counter               ,'提交汇的人数';/
                EXEC P_ColumnComment TProcess_History ,counterPass           ,'汇总人数的限制。当大于等于此值后，才能继续向下流转';/
                EXEC P_ColumnComment TProcess_History ,passType              ,'汇总类型。指summaryPass和counterPass的关系是与，还是或';/
                EXEC P_ColumnComment TProcess_History ,limitUserID           ,'限制操作人员ID';/
                EXEC P_ColumnComment TProcess_History ,limitOrgID            ,'限制操作部门ID';/
                EXEC P_ColumnComment TProcess_History ,limitTime             ,'限制操作时间';/
                EXEC P_ColumnComment TProcess_History ,operateTime           ,'操作时间';/
                EXEC P_ColumnComment TProcess_History ,operateTimeLen        ,'操作时长（单位：秒）';/
                EXEC P_ColumnComment TProcess_History ,operateTypeID         ,'操作类型ID';/
                EXEC P_ColumnComment TProcess_History ,operateType           ,'操作类型名称';/
                EXEC P_ColumnComment TProcess_History ,operateUserID         ,'操作人员ID';/
                EXEC P_ColumnComment TProcess_History ,operateUser           ,'操作人员名称';/
                EXEC P_ColumnComment TProcess_History ,operateOrgID          ,'操作部门ID';/
                EXEC P_ColumnComment TProcess_History ,operateOrg            ,'操作部门名称';/
                EXEC P_ColumnComment TProcess_History ,operateFiles          ,'操作文件信息，由第三方使用者定义其内容（拓展性数据）';/
                EXEC P_ColumnComment TProcess_History ,operateDatas          ,'操作数据信息，由第三方使用者定义其内容（拓展性数据）';/
                EXEC P_ColumnComment TProcess_History ,infoComment           ,'备注说明';/
                ]]>
            </content>
            
            <comment>工作流过程表(历史表)</comment>
            <create>TProcess_History</create>
            
        </sql>
        
        
        
        <sql id="XSQL_Create_TProcessParticipants_History">
        
            <dataSourceGroup ref="DSG_XFlow" />
            
            <content if="ORACLE == DSG_XFlow.getDbProductType">
                <![CDATA[
                CREATE TABLE TProcessParticipants_History
                (
                 pwpID              VARCHAR2(64)                     NOT NULL
                ,processID          VARCHAR2(64)                     NOT NULL
                ,splitProcessID     VARCHAR2(64)
                ,workID             VARCHAR2(64)                     NOT NULL
                ,serviceDataID      VARCHAR2(64)
                ,objectType         NUMBER(2)                        NOT NULL
                ,objectID           VARCHAR2(64)                     NOT NULL
                ,objectName         NVARCHAR2(128)
                ,objectNo           NUMBER(10)                       NOT NULL
                ,createrID          VARCHAR2(64)                     NOT NULL
                ,creater            NVARCHAR2(128)
                ,createOrgID        VARCHAR2(64)
                ,createOrg          NVARCHAR2(128)
                ,createTime         DATE                             NOT NULL
                );/
                
                ALTER TABLE TProcessParticipants_History ADD CONSTRAINT PK_TProcessParticipants_History PRIMARY KEY (pwpID);/
                
                COMMENT ON TABLE  TProcessParticipants_History                IS '工作流过程的实际参与人';/
                COMMENT ON COLUMN TProcessParticipants_History.pwpID          IS '主键ID';/
                COMMENT ON COLUMN TProcessParticipants_History.processID      IS '工作流的过程ID';/
                COMMENT ON COLUMN TProcessParticipants_History.splitProcessID IS '分单前的过程ID。合单前持续记录ID值';/
                COMMENT ON COLUMN TProcessParticipants_History.workID         IS '工作流实例ID';/
                COMMENT ON COLUMN TProcessParticipants_History.serviceDataID  IS '第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息';/
                COMMENT ON COLUMN TProcessParticipants_History.objectType     IS '参与者类型';/
                COMMENT ON COLUMN TProcessParticipants_History.objectID       IS '参与者ID';/
                COMMENT ON COLUMN TProcessParticipants_History.objectName     IS '参与者名称';/
                COMMENT ON COLUMN TProcessParticipants_History.objectNo       IS '参与者序号，表示前后顺序。系统自动生成，下标从1开始';/
                COMMENT ON COLUMN TProcessParticipants_History.createrID      IS '创建人员ID';/
                COMMENT ON COLUMN TProcessParticipants_History.creater        IS '创建人员名称';/
                COMMENT ON COLUMN TProcessParticipants_History.createOrgID    IS '创建部门ID';/
                COMMENT ON COLUMN TProcessParticipants_History.createOrg      IS '创建部门名称';/
                COMMENT ON COLUMN TProcessParticipants_History.createTime     IS '创建时间';/
                ]]>
            </content>
            
            <content if="MYSQL == DSG_XFlow.getDbProductType">
                <![CDATA[
                CREATE TABLE TProcessParticipants_History
                (
                 pwpID              VARCHAR(64)                     NOT NULL COMMENT '主键ID'
                ,processID          VARCHAR(64)                     NOT NULL COMMENT '工作流的过程ID'
                ,splitProcessID     VARCHAR(64)                              COMMENT '分单前的过程ID。合单前持续记录ID值'
                ,workID             VARCHAR(64)                     NOT NULL COMMENT '工作流实例ID'
                ,serviceDataID      VARCHAR(64)                              COMMENT '第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息'
                ,objectType         INT(2)                          NOT NULL COMMENT '参与者类型'
                ,objectID           VARCHAR(64)                     NOT NULL COMMENT '参与者ID'
                ,objectName         VARCHAR(128)                             COMMENT '参与者名称'
                ,objectNo           INT(10)                         NOT NULL COMMENT '参与者序号，表示前后顺序。系统自动生成，下标从1开始'
                ,createrID          VARCHAR(64)                     NOT NULL COMMENT '创建人员ID'
                ,creater            VARCHAR(128)                             COMMENT '创建人员名称'
                ,createOrgID        VARCHAR(64)                              COMMENT '创建部门ID'
                ,createOrg          VARCHAR(128)                             COMMENT '创建部门名称'
                ,createTime         DATETIME                        NOT NULL COMMENT '创建时间'
                );/
                
                ALTER TABLE TProcessParticipants_History ADD CONSTRAINT PK_TProcessParticipants_History PRIMARY KEY (pwpID);/
                
                ALTER TABLE  TProcessParticipants_History    COMMENT            = '工作流过程的实际参与人';/
                ]]>
            </content>
            
            <content if="SQLSERVER == DSG_XFlow.getDbProductType">
                <![CDATA[
                CREATE TABLE TProcessParticipants_History
                (
                 pwpID              VARCHAR(64)                     NOT NULL
                ,processID          VARCHAR(64)                     NOT NULL
                ,splitProcessID     VARCHAR(64)
                ,workID             VARCHAR(64)                     NOT NULL
                ,serviceDataID      VARCHAR(64)
                ,objectType         INT                             NOT NULL
                ,objectID           VARCHAR(64)                     NOT NULL
                ,objectName         NVARCHAR(128)
                ,objectNo           INT                             NOT NULL
                ,createrID          VARCHAR(64)                     NOT NULL
                ,creater            NVARCHAR(128)
                ,createOrgID        VARCHAR(64)
                ,createOrg          NVARCHAR(128)
                ,createTime         DATETIME                        NOT NULL
                );/
                
                ALTER TABLE TProcessParticipants_History ADD CONSTRAINT PK_TProcessParticipants_History PRIMARY KEY (pwpID);/
                
                EXEC P_TableComment  TProcessParticipants_History                 ,'工作流过程的实际参与人';/
                EXEC P_ColumnComment TProcessParticipants_History ,pwpID          ,'主键ID';/
                EXEC P_ColumnComment TProcessParticipants_History ,processID      ,'工作流的过程ID';/
                EXEC P_ColumnComment TProcessParticipants_History ,splitProcessID ,'分单前的过程ID。合单前持续记录ID值';/
                EXEC P_ColumnComment TProcessParticipants_History ,workID         ,'工作流实例ID';/
                EXEC P_ColumnComment TProcessParticipants_History ,serviceDataID  ,'第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息';/
                EXEC P_ColumnComment TProcessParticipants_History ,objectType     ,'参与者类型';/
                EXEC P_ColumnComment TProcessParticipants_History ,objectID       ,'参与者ID';/
                EXEC P_ColumnComment TProcessParticipants_History ,objectName     ,'参与者名称';/
                EXEC P_ColumnComment TProcessParticipants_History ,objectNo       ,'参与者序号，表示前后顺序。系统自动生成，下标从1开始';/
                EXEC P_ColumnComment TProcessParticipants_History ,createrID      ,'创建人员ID';/
                EXEC P_ColumnComment TProcessParticipants_History ,creater        ,'创建人员名称';/
                EXEC P_ColumnComment TProcessParticipants_History ,createOrgID    ,'创建部门ID';/
                EXEC P_ColumnComment TProcessParticipants_History ,createOrg      ,'创建部门名称';/
                EXEC P_ColumnComment TProcessParticipants_History ,createTime     ,'创建时间';/
                ]]>
            </content>
            
            <comment>工作流过程的动态参与人(历史表)</comment>
            <create>TProcessParticipants_History</create>
            
        </sql>
        
    </sqls>
    
</config>