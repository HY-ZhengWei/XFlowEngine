<?xml version="1.0" encoding="UTF-8"?>

<config>

	<import name="sqls"            class="java.util.ArrayList" />
	<import name="sql"             class="org.hy.common.xml.XSQL" />



    <!-- 数据库初始化对象创建（自动创建）的相关SQL -->
	<sqls>
	
		<sql id="XSQL_Create_P_TableComment">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
				CREATE PROCEDURE [dbo].[P_TableComment]
				  @TableName   AS SYSNAME
				 ,@Comment     AS SYSNAME
				AS
				BEGIN
				
				IF ((SELECT COUNT(*) FROM FN_ListExtendedProperty('MS_Description', 
				'SCHEMA', 'dbo', 
				'TABLE', @TableName, 
				NULL, NULL)) >= 1)
					EXEC SP_UpdateExtendedProperty 'MS_Description' 
				                                   ,@Comment
				                                   ,'SCHEMA'
				                                   ,'dbo'
				                                   ,'TABLE'
				                                   ,@TableName
				                                   ,NULL
				                                   ,NULL
				ELSE
					EXEC SP_AddExtendedProperty 'MS_Description' 
				                                ,@Comment
				                                ,'SCHEMA'
				                                ,'dbo'
				                                ,'TABLE'
				                                ,@TableName
				                                ,NULL
				                                ,NULL
				END;/
				]]>
			</content>
			
			<comment>设置表注释的过程</comment>
			<create>P_TableComment</create>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_P_ColumnComment">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
				CREATE PROCEDURE [dbo].[P_ColumnComment]
				  @TableName   AS SYSNAME
				 ,@ColumnName  AS SYSNAME
				 ,@Comment     AS SYSNAME
				AS
				BEGIN
				
				IF ((SELECT COUNT(*) FROM FN_ListExtendedProperty('MS_Description', 
				'SCHEMA', 'dbo', 
				'TABLE', @TableName, 
				'COLUMN', @ColumnName)) >= 1)
					EXEC SP_UpdateExtendedProperty 'MS_Description' 
				                                   ,@Comment
				                                   ,'SCHEMA'
				                                   ,'dbo'
				                                   ,'TABLE'
				                                   ,@TableName
				                                   ,'COLUMN'
				                                   ,@ColumnName
				ELSE
					EXEC SP_AddExtendedProperty 'MS_Description' 
				                                ,@Comment
				                                ,'SCHEMA'
				                                ,'dbo'
				                                ,'TABLE'
				                                ,@TableName
				                                ,'COLUMN'
				                                ,@ColumnName
				END;/
				]]>
			</content>
			
			<comment>设置字段注释的过程</comment>
			<create>P_ColumnComment</create>
			
		</sql>


		
		<sql id="XSQL_Create_TFlowInfo">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TFlowInfo
                (
                 workID             VARCHAR2(64)                     NOT NULL
                ,workFatherID       VARCHAR2(64)                     
                ,flowTemplateID     VARCHAR2(64)                     NOT NULL
                ,serviceDataID      VARCHAR2(64)
                ,createrID          VARCHAR2(64)                     NOT NULL
                ,creater            NVARCHAR2(128)
                ,createOrgID        VARCHAR2(64)
                ,createOrg          NVARCHAR2(128)
                ,createTime         DATE                             NOT NULL
                ,lastUserID         VARCHAR2(64)                     NOT NULL
                ,lastUser           NVARCHAR2(128)
                ,lastTime           DATE
                ,lastOrgID          VARCHAR2(64)
                ,lastOrg            NVARCHAR2(128)
                ,lastProcessID      VARCHAR2(64)                     NOT NULL
                ,isValid            NUMBER(1)                        NOT NULL
                ,isDelete           NUMBER(1)                        NOT NULL
                );/
                
                ALTER TABLE TFlowInfo ADD CONSTRAINT PK_TFlowInfo PRIMARY KEY (workID);/
                
                COMMENT ON TABLE  TFlowInfo                               IS '工作流信息表';/
                COMMENT ON COLUMN TFlowInfo.workID                        IS '工作流实例ID';/
                COMMENT ON COLUMN TFlowInfo.workFatherID                  IS '工作流的父实例ID，可为空';/
                COMMENT ON COLUMN TFlowInfo.flowTemplateID                IS '工作流的模板ID';/
                COMMENT ON COLUMN TFlowInfo.serviceDataID                 IS '第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息';/
                COMMENT ON COLUMN TFlowInfo.createrID                     IS '创建人员ID';/
                COMMENT ON COLUMN TFlowInfo.creater                       IS '创建人员名称';/
                COMMENT ON COLUMN TFlowInfo.createOrgID                   IS '创建部门ID';/
                COMMENT ON COLUMN TFlowInfo.createOrg                     IS '创建部门名称';/
                COMMENT ON COLUMN TFlowInfo.createTime                    IS '创建时间';/
                COMMENT ON COLUMN TFlowInfo.lastUserID                    IS '最后修改人员ID';/
                COMMENT ON COLUMN TFlowInfo.lastUser                      IS '最后修改人员名称';/
                COMMENT ON COLUMN TFlowInfo.lastTime                      IS '最后修改时间';/
                COMMENT ON COLUMN TFlowInfo.lastOrgID                     IS '最后修改部门ID';/
                COMMENT ON COLUMN TFlowInfo.lastOrg                       IS '最后修改部门名称';/
                COMMENT ON COLUMN TFlowInfo.lastProcessID                 IS '最后修改的过程ID';/
                COMMENT ON COLUMN TFlowInfo.isValid                       IS '是否有效标记(0:无效；1:有效)';/
                COMMENT ON COLUMN TFlowInfo.isDelete                      IS '是否删除标记(0:未删除；1:已删除)';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TFlowInfo
                (
                 workID             VARCHAR(64)                      NOT NULL
                ,workFatherID       VARCHAR(64)                     
                ,flowTemplateID     VARCHAR(64)                      NOT NULL
                ,serviceDataID      VARCHAR(64)
                ,createrID          VARCHAR(64)                      NOT NULL
                ,creater            NVARCHAR(128)
                ,createOrgID        VARCHAR(64)
                ,createOrg          NVARCHAR(128)
                ,createTime         DATETIME                         NOT NULL
                ,lastUserID         VARCHAR(64)                      NOT NULL
                ,lastUser           NVARCHAR(128)
                ,lastTime           DATETIME
                ,lastOrgID          VARCHAR(64)
                ,lastOrg            NVARCHAR(128)
                ,lastProcessID      VARCHAR(64)                      NOT NULL
                ,isValid            INT                              NOT NULL
                ,isDelete           INT                              NOT NULL
                );/
                
                ALTER TABLE TFlowInfo ADD CONSTRAINT PK_TFlowInfo PRIMARY KEY (workID);/
                
                EXEC P_TableComment  TFlowInfo                            ,'工作流信息表';/
                EXEC P_ColumnComment TFlowInfo ,workID                    ,'工作流实例ID';/
                EXEC P_ColumnComment TFlowInfo ,workFatherID              ,'工作流的父实例ID，可为空';/
                EXEC P_ColumnComment TFlowInfo ,flowTemplateID            ,'工作流的模板ID';/
                EXEC P_ColumnComment TFlowInfo ,serviceDataID             ,'第三方使用系统的业务数据ID。即支持用第三方ID也能找到工作流信息';/
                EXEC P_ColumnComment TFlowInfo ,createrID                 ,'创建人员ID';/
                EXEC P_ColumnComment TFlowInfo ,creater                   ,'创建人员名称';/
                EXEC P_ColumnComment TFlowInfo ,createOrgID               ,'创建部门ID';/
                EXEC P_ColumnComment TFlowInfo ,createOrg                 ,'创建部门名称';/
                EXEC P_ColumnComment TFlowInfo ,createTime                ,'创建时间';/
                EXEC P_ColumnComment TFlowInfo ,lastUserID                ,'最后修改人员ID';/
                EXEC P_ColumnComment TFlowInfo ,lastUser                  ,'最后修改人员名称';/
                EXEC P_ColumnComment TFlowInfo ,lastTime                  ,'最后修改时间';/
                EXEC P_ColumnComment TFlowInfo ,lastOrgID                 ,'最后修改部门ID';/
                EXEC P_ColumnComment TFlowInfo ,lastOrg                   ,'最后修改部门名称';/
                EXEC P_ColumnComment TFlowInfo ,lastProcessID             ,'最后修改的过程ID';/
                EXEC P_ColumnComment TFlowInfo ,isValid                   ,'是否有效标记(0:无效；1:有效)';/
                EXEC P_ColumnComment TFlowInfo ,isDelete                  ,'是否删除标记(0:未删除；1:已删除)';/
				]]>
			</content>
			
			<comment>工作流信息表</comment>
			<create>TFlowInfo</create>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TProcess">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TProcess
                (
                 processID              VARCHAR2(64)                     NOT NULL
                ,workID                 VARCHAR2(64)                     NOT NULL
                ,splitProcessID         VARCHAR2(64)
                ,processNo              NUMBER(10)                       NOT NULL
                ,currentActivityID      VARCHAR2(64)                     NOT NULL
                ,currentActivityName    NVARCHAR2(64)                    NOT NULL
                ,previousProcessID      VARCHAR2(64)
                ,previousActivityID     VARCHAR2(64)                     NOT NULL
                ,previousActivityName   NVARCHAR2(64)                    NOT NULL
                ,nextProcessID          VARCHAR2(64)
                ,nextActivityID         VARCHAR2(64)
                ,nextActivityName       NVARCHAR2(64)
                ,createrID              VARCHAR2(64)                     NOT NULL
                ,creater                NVARCHAR2(128)
                ,createOrgID            VARCHAR2(64)
                ,createOrg              NVARCHAR2(128)
                ,createTime             DATE                             NOT NULL
                ,limitUserID            VARCHAR2(64)
                ,limitOrgID             VARCHAR2(64)
                ,limitTime              DATE
                ,operateTime            DATE
                ,operateTimeLen         NUMBER(10)
                ,operateTypeID          VARCHAR2(64)
                ,operateType            NVARCHAR2(128)
                ,operateUserID          VARCHAR2(64)
                ,operateUser            NVARCHAR2(128)
                ,operateOrgID           VARCHAR2(64)
                ,operateOrg             NVARCHAR2(128)
                ,operateFiles           VARCHAR2(2000)
                ,operateDatas           VARCHAR2(2000)
                ,infoComment            NVARCHAR2(2000)
                );/
                
                ALTER TABLE TProcess ADD CONSTRAINT PK_TProcess PRIMARY KEY (processID);/
                
                COMMENT ON TABLE  TProcess                               IS '工作流过程表';/
                COMMENT ON COLUMN TProcess.processID                     IS '工作流的过程ID';/
                COMMENT ON COLUMN TProcess.workID                        IS '工作流实例ID';/
                COMMENT ON COLUMN TProcess.splitProcessID                IS '分单前的过程ID。合单前持续记录ID值。不一定与previousProcessID同值';/
                COMMENT ON COLUMN TProcess.processNo                     IS '工作流的过程编号。下标从1开始';/
                COMMENT ON COLUMN TProcess.currentActivityID             IS '当前活动ID';/
                COMMENT ON COLUMN TProcess.currentActivityName           IS '当前活动名称';/
                COMMENT ON COLUMN TProcess.previousProcessID             IS '上一过程ID';/
                COMMENT ON COLUMN TProcess.previousActivityID            IS '上一活动ID';/
                COMMENT ON COLUMN TProcess.previousActivityName          IS '上一活动名称';/
                COMMENT ON COLUMN TProcess.nextProcessID                 IS '下一过程ID';/
                COMMENT ON COLUMN TProcess.nextActivityID                IS '下一活动ID';/
                COMMENT ON COLUMN TProcess.nextActivityName              IS '下一活动名称';/
                COMMENT ON COLUMN TProcess.createrID                     IS '创建人员ID';/
                COMMENT ON COLUMN TProcess.creater                       IS '创建人员名称';/
                COMMENT ON COLUMN TProcess.createOrgID                   IS '创建部门ID';/
                COMMENT ON COLUMN TProcess.createOrg                     IS '创建部门名称';/
                COMMENT ON COLUMN TProcess.createTime                    IS '创建时间';/
                COMMENT ON COLUMN TProcess.limitUserID                   IS '限制操作人员ID';/
                COMMENT ON COLUMN TProcess.limitOrgID                    IS '限制操作部门ID';/
                COMMENT ON COLUMN TProcess.limitTime                     IS '限制操作时间';/
                COMMENT ON COLUMN TProcess.operateTime                   IS '操作时间';/
                COMMENT ON COLUMN TProcess.operateTimeLen                IS '操作时长（单位：秒）';/
                COMMENT ON COLUMN TProcess.operateTypeID                 IS '操作类型ID';/
                COMMENT ON COLUMN TProcess.operateType                   IS '操作类型名称';/
                COMMENT ON COLUMN TProcess.operateUserID                 IS '操作人员ID';/
                COMMENT ON COLUMN TProcess.operateUser                   IS '操作人员名称';/
                COMMENT ON COLUMN TProcess.operateOrgID                  IS '操作部门ID';/
                COMMENT ON COLUMN TProcess.operateOrg                    IS '操作部门名称';/
                COMMENT ON COLUMN TProcess.operateFiles                  IS '操作文件信息，由第三方使用者定义其内容（拓展性数据）';/
                COMMENT ON COLUMN TProcess.operateDatas                  IS '操作数据信息，由第三方使用者定义其内容（拓展性数据）';/
                COMMENT ON COLUMN TProcess.infoComment                   IS '备注说明';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TProcess
                (
                 processID               VARCHAR(64)                      NOT NULL
                ,workID                  VARCHAR(64)                      NOT NULL
                ,splitProcessID          VARCHAR(64)
                ,processNo               INT                              NOT NULL
                ,currentActivityID       VARCHAR(64)                      NOT NULL
                ,currentActivityName     NVARCHAR(64)                     NOT NULL
                ,previousProcessID       VARCHAR(64)
                ,previousActivityID      VARCHAR(64)                      NOT NULL
                ,previousActivityName    NVARCHAR(64)                     NOT NULL
                ,nextProcessID           VARCHAR(64)
                ,nextActivityID          VARCHAR(64)
                ,nextActivityName        NVARCHAR(64)
                ,createrID               VARCHAR(64)                      NOT NULL
                ,creater                 NVARCHAR(128)
                ,createOrgID             VARCHAR(64)
                ,createOrg               NVARCHAR(128)
                ,createTime              DATETIME                         NOT NULL
                ,limitUserID             VARCHAR(64)
                ,limitOrgID              VARCHAR(64)
                ,limitTime               DATETIME
                ,operateTime             DATETIME
                ,operateTimeLen          INT
                ,operateTypeID           VARCHAR(64)
                ,operateType             NVARCHAR(128)
                ,operateUserID           VARCHAR(64)
                ,operateUser             NVARCHAR(128)
                ,operateOrgID            VARCHAR(64)
                ,operateOrg              NVARCHAR(128)
                ,operateFiles            VARCHAR(2000)
                ,operateDatas            VARCHAR(2000)
                ,infoComment             NVARCHAR(2000)
                );/
                
                ALTER TABLE TProcess ADD CONSTRAINT PK_TProcess PRIMARY KEY (processID);/
                
                EXEC P_TableComment  TProcess                               ,'工作流过程表';/
                EXEC P_ColumnComment TProcess ,processID                    ,'工作流的过程ID';/
                EXEC P_ColumnComment TProcess ,workID                       ,'工作流实例ID';/
                EXEC P_ColumnComment TProcess ,splitProcessID               ,'分单前的过程ID。合单前持续记录ID值。不一定与previousProcessID同值';/
                EXEC P_ColumnComment TProcess ,processNo                    ,'工作流的过程编号。下标从1开始';/
                EXEC P_ColumnComment TProcess ,currentActivityID            ,'当前活动ID';/
                EXEC P_ColumnComment TProcess ,currentActivityName          ,'当前活动名称';/
                EXEC P_ColumnComment TProcess ,previousProcessID            ,'上一过程ID';/
                EXEC P_ColumnComment TProcess ,previousActivityID           ,'上一活动ID';/
                EXEC P_ColumnComment TProcess ,previousActivityName         ,'上一活动名称';/
                EXEC P_ColumnComment TProcess ,nextProcessID                ,'下一过程ID';/
                EXEC P_ColumnComment TProcess ,nextActivityID               ,'下一活动ID';/
                EXEC P_ColumnComment TProcess ,nextActivityName             ,'下一活动名称';/
                EXEC P_ColumnComment TProcess ,createrID                    ,'创建人员ID';/
                EXEC P_ColumnComment TProcess ,creater                      ,'创建人员名称';/
                EXEC P_ColumnComment TProcess ,createOrgID                  ,'创建部门ID';/
                EXEC P_ColumnComment TProcess ,createOrg                    ,'创建部门名称';/
                EXEC P_ColumnComment TProcess ,createTime                   ,'创建时间';/
                EXEC P_ColumnComment TProcess ,limitUserID                  ,'限制操作人员ID';/
                EXEC P_ColumnComment TProcess ,limitOrgID                   ,'限制操作部门ID';/
                EXEC P_ColumnComment TProcess ,limitTime                    ,'限制操作时间';/
                EXEC P_ColumnComment TProcess ,operateTime                  ,'操作时间';/
                EXEC P_ColumnComment TProcess ,operateTimeLen               ,'操作时长（单位：秒）';/
                EXEC P_ColumnComment TProcess ,operateTypeID                ,'操作类型ID';/
                EXEC P_ColumnComment TProcess ,operateType                  ,'操作类型名称';/
                EXEC P_ColumnComment TProcess ,operateUserID                ,'操作人员ID';/
                EXEC P_ColumnComment TProcess ,operateUser                  ,'操作人员名称';/
                EXEC P_ColumnComment TProcess ,operateOrgID                 ,'操作部门ID';/
                EXEC P_ColumnComment TProcess ,operateOrg                   ,'操作部门名称';/
                EXEC P_ColumnComment TProcess ,operateFiles                 ,'操作文件信息，由第三方使用者定义其内容（拓展性数据）';/
                EXEC P_ColumnComment TProcess ,operateDatas                 ,'操作数据信息，由第三方使用者定义其内容（拓展性数据）';/
                EXEC P_ColumnComment TProcess ,infoComment                  ,'备注说明';/
				]]>
			</content>
			
			<comment>工作流过程表</comment>
			<create>TProcess</create>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TProcessParticipants">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TProcessParticipants
                (
                 pwpID              VARCHAR2(64)                     NOT NULL
                ,processID          VARCHAR2(64)                     NOT NULL
                ,workID             VARCHAR2(64)                     NOT NULL
                ,objectType         NUMBER(2)                        NOT NULL
                ,objectID           VARCHAR2(64)                     NOT NULL
                ,objectName         NVARCHAR2(128)
                ,objectNo           NUMBER(10)                       NOT NULL
                ,createrID          VARCHAR2(64)                     NOT NULL
                ,creater            NVARCHAR2(128)
                ,createOrgID        VARCHAR2(64)
                ,createOrg          NVARCHAR2(128)
                ,createTime         DATE                             NOT NULL
                );/
                
                ALTER TABLE TProcessParticipants ADD CONSTRAINT PK_TProcessParticipants PRIMARY KEY (pwpID);/
                
                COMMENT ON TABLE  TProcessParticipants                    IS '工作流过程的实际参与人';/
                COMMENT ON COLUMN TProcessParticipants.pwpID              IS '主键ID';/
                COMMENT ON COLUMN TProcessParticipants.processID          IS '工作流的过程ID';/
                COMMENT ON COLUMN TProcessParticipants.workID             IS '工作流实例ID';/
                COMMENT ON COLUMN TProcessParticipants.objectType         IS '参与者类型（1:执行人；2:执行部门；3:执行角色；11:抄送人；12:抄送部门；13:抄送角色）';/
                COMMENT ON COLUMN TProcessParticipants.objectID           IS '参与者ID';/
                COMMENT ON COLUMN TProcessParticipants.objectName         IS '参与者名称';/
                COMMENT ON COLUMN TProcessParticipants.objectNo           IS '参与者序号，表示前后顺序。系统自动生成，下标从1开始';/
                COMMENT ON COLUMN TProcessParticipants.createrID          IS '创建人员ID';/
                COMMENT ON COLUMN TProcessParticipants.creater            IS '创建人员名称';/
                COMMENT ON COLUMN TProcessParticipants.createOrgID        IS '创建部门ID';/
                COMMENT ON COLUMN TProcessParticipants.createOrg          IS '创建部门名称';/
                COMMENT ON COLUMN TProcessParticipants.createTime         IS '创建时间';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TProcessParticipants
                (
                 pwpID              VARCHAR(64)                     NOT NULL
                ,processID          VARCHAR(64)                     NOT NULL
                ,workID             VARCHAR(64)                     NOT NULL
                ,objectType         INT                             NOT NULL
                ,objectID           VARCHAR(64)                     NOT NULL
                ,objectName         NVARCHAR(128)
                ,objectNo           INT                             NOT NULL
                ,createrID          VARCHAR(64)                     NOT NULL
                ,creater            NVARCHAR(128)
                ,createOrgID        VARCHAR(64)
                ,createOrg          NVARCHAR(128)
                ,createTime         DATETIME                        NOT NULL
                );/
                
                ALTER TABLE TProcessParticipants ADD CONSTRAINT PK_TProcessParticipants PRIMARY KEY (pwpID);/
                
                EXEC P_TableComment  TProcessParticipants                     ,'工作流过程的实际参与人';/
                EXEC P_ColumnComment TProcessParticipants ,pwpID              ,'主键ID';/
                EXEC P_ColumnComment TProcessParticipants ,processID          ,'工作流的过程ID';/
                EXEC P_ColumnComment TProcessParticipants ,workID             ,'工作流实例ID';/
                EXEC P_ColumnComment TProcessParticipants ,objectType         ,'参与者类型（1:执行人；2:执行部门；3:执行角色；11:抄送人；12:抄送部门；13:抄送角色）';/
                EXEC P_ColumnComment TProcessParticipants ,objectID           ,'参与者ID';/
                EXEC P_ColumnComment TProcessParticipants ,objectName         ,'参与者名称';/
                EXEC P_ColumnComment TProcessParticipants ,objectNo           ,'参与者序号，表示前后顺序。系统自动生成，下标从1开始';/
                EXEC P_ColumnComment TProcessParticipants ,createrID          ,'创建人员ID';/
                EXEC P_ColumnComment TProcessParticipants ,creater            ,'创建人员名称';/
                EXEC P_ColumnComment TProcessParticipants ,createOrgID        ,'创建部门ID';/
                EXEC P_ColumnComment TProcessParticipants ,createOrg          ,'创建部门名称';/
                EXEC P_ColumnComment TProcessParticipants ,createTime         ,'创建时间';/
				]]>
			</content>
			
			<comment>工作流过程的实际参与人</comment>
			<create>TProcessParticipants</create>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TTemplate">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TTemplate
                (
                 templateID         VARCHAR2(64)                     NOT NULL
                ,versionNo          NUMBER(10)                       NOT NULL
                ,version            VARCHAR2(32)
                ,templateName       NVARCHAR2(128)                   NOT NULL
                ,infoComment        NVARCHAR2(2000)
                ,createrID          VARCHAR2(64)                     NOT NULL
                ,creater            NVARCHAR2(128)
                ,createTime         DATE                             NOT NULL
                ,lastUserID         VARCHAR2(64)                     NOT NULL
                ,lastUser           NVARCHAR2(128)
                ,lastTime           DATE
                ,isValid            NUMBER(1)                        NOT NULL
                ,isDelete           NUMBER(1)                        NOT NULL
                );/
                
                ALTER TABLE TTemplate ADD CONSTRAINT PK_TTemplate PRIMARY KEY (templateID);/
                
                COMMENT ON TABLE  TTemplate                               IS '工作流模板表';/
                COMMENT ON COLUMN TTemplate.templateID                    IS '模板ID';/
                COMMENT ON COLUMN TTemplate.versionNo                     IS '模板版本号（数值递增型）';/
                COMMENT ON COLUMN TTemplate.version                       IS '模板版本号';/
                COMMENT ON COLUMN TTemplate.templateName                  IS '模板名称';/
                COMMENT ON COLUMN TTemplate.infoComment                   IS '备注说明';/
                COMMENT ON COLUMN TTemplate.createrID                     IS '创建人员ID';/
                COMMENT ON COLUMN TTemplate.creater                       IS '创建人员名称';/
                COMMENT ON COLUMN TTemplate.createTime                    IS '创建时间';/
                COMMENT ON COLUMN TTemplate.lastUserID                    IS '最后修改人员ID';/
                COMMENT ON COLUMN TTemplate.lastUser                      IS '最后修改人员名称';/
                COMMENT ON COLUMN TTemplate.lastTime                      IS '最后修改时间';/
                COMMENT ON COLUMN TTemplate.isValid                       IS '是否有效标记(0:无效；1:有效)';/
                COMMENT ON COLUMN TTemplate.isDelete                      IS '是否删除标记(0:未删除；1:已删除)';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TTemplate
                (
                 templateID         VARCHAR(64)                      NOT NULL
                ,versionNo          INT                              NOT NULL
                ,version            VARCHAR(32)
                ,templateName       NVARCHAR(128)                    NOT NULL
                ,infoComment        NVARCHAR(2000)
                ,createrID          VARCHAR(64)                      NOT NULL
                ,creater            NVARCHAR(128)
                ,createTime         DATETIME                         NOT NULL
                ,lastUserID         VARCHAR(64)                      NOT NULL
                ,lastUser           NVARCHAR(128)
                ,lastTime           DATETIME
                ,isValid            INT                              NOT NULL
                ,isDelete           INT                              NOT NULL
                );/
                
                ALTER TABLE TTemplate ADD CONSTRAINT PK_TTemplate PRIMARY KEY (templateID);/
                
                EXEC P_TableComment  TTemplate                                ,'工作流模板表';/
                EXEC P_ColumnComment TTemplate ,templateID                    ,'模板ID';/
                EXEC P_ColumnComment TTemplate ,versionNo                     ,'模板版本号（数值递增型）';/
                EXEC P_ColumnComment TTemplate ,version                       ,'模板版本号';/
                EXEC P_ColumnComment TTemplate ,templateName                  ,'模板名称';/
                EXEC P_ColumnComment TTemplate ,infoComment                   ,'备注说明';/
                EXEC P_ColumnComment TTemplate ,createrID                     ,'创建人员ID';/
                EXEC P_ColumnComment TTemplate ,creater                       ,'创建人员名称';/
                EXEC P_ColumnComment TTemplate ,createTime                    ,'创建时间';/
                EXEC P_ColumnComment TTemplate ,lastUserID                    ,'最后修改人员ID';/
                EXEC P_ColumnComment TTemplate ,lastUser                      ,'最后修改人员名称';/
                EXEC P_ColumnComment TTemplate ,lastTime                      ,'最后修改时间';/
                EXEC P_ColumnComment TTemplate ,isValid                       ,'是否有效标记(0:无效；1:有效)';/
                EXEC P_ColumnComment TTemplate ,isDelete                      ,'是否删除标记(0:未删除；1:已删除)';/
				]]>
			</content>
			
			<comment>工作流模板表</comment>
			<create>TTemplate</create>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TActivityInfo">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TActivityInfo
                (
                 activityID         VARCHAR2(64)                     NOT NULL
                ,templateID         VARCHAR2(64)                     NOT NULL                   
                ,activityName       NVARCHAR2(128)                   NOT NULL
                ,activityTypeID     VARCHAR2(64)                     NOT NULL
                ,x                  NUMBER(10 ,2)
                ,y                  NUMBER(10 ,2)
                ,z                  NUMBER(10 ,2)
                ,height             NUMBER(10 ,2)
                ,width              NUMBER(10 ,2)
                ,iconURL            VARCHAR2(500)
                ,infoComment        NVARCHAR2(2000)
                ,createrID          VARCHAR2(64)                     NOT NULL
                ,creater            NVARCHAR2(128)
                ,createTime         DATE                             NOT NULL
                ,lastUserID         VARCHAR2(64)                     NOT NULL
                ,lastUser           NVARCHAR2(128)
                ,lastTime           DATE
                );/
                
                ALTER TABLE TActivityInfo ADD CONSTRAINT PK_TActivityInfo PRIMARY KEY (activityID);/
                
                COMMENT ON TABLE  TActivityInfo                           IS '工作流活动组件(节点)信息表';/
                COMMENT ON COLUMN TActivityInfo.activityID                IS '工作流活动ID';/
                COMMENT ON COLUMN TActivityInfo.templateID                IS '工作流的模板ID';/
                COMMENT ON COLUMN TActivityInfo.activityName              IS '活动名称';/
                COMMENT ON COLUMN TActivityInfo.activityTypeID            IS '活动类型ID';/
                COMMENT ON COLUMN TActivityInfo.x                         IS '位置x坐标值';/
                COMMENT ON COLUMN TActivityInfo.y                         IS '位置y坐标值';/
                COMMENT ON COLUMN TActivityInfo.z                         IS '位置z坐标值';/
                COMMENT ON COLUMN TActivityInfo.height                    IS '图标高度';/
                COMMENT ON COLUMN TActivityInfo.width                     IS '图标宽度';/
                COMMENT ON COLUMN TActivityInfo.iconURL                   IS '图标路径';/
                COMMENT ON COLUMN TActivityInfo.infoComment               IS '备注说明';/
                COMMENT ON COLUMN TActivityInfo.createrID                 IS '创建人员ID';/
                COMMENT ON COLUMN TActivityInfo.creater                   IS '创建人员名称';/
                COMMENT ON COLUMN TActivityInfo.createTime                IS '创建时间';/
                COMMENT ON COLUMN TActivityInfo.lastUserID                IS '最后修改人员ID';/
                COMMENT ON COLUMN TActivityInfo.lastUser                  IS '最后修改人员名称';/
                COMMENT ON COLUMN TActivityInfo.lastTime                  IS '最后修改时间';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TActivityInfo
                (
                 activityID         VARCHAR(64)                      NOT NULL
                ,templateID         VARCHAR(64)                      NOT NULL                   
                ,activityName       NVARCHAR(128)                    NOT NULL
                ,activityTypeID     VARCHAR(64)                      NOT NULL
                ,x                  DECIMAL
                ,y                  DECIMAL
                ,z                  DECIMAL
                ,height             DECIMAL
                ,width              DECIMAL
                ,iconURL            VARCHAR(500)
                ,infoComment        NVARCHAR(2000)
                ,createrID          VARCHAR(64)                      NOT NULL
                ,creater            NVARCHAR(128)
                ,createTime         DATETIME                         NOT NULL
                ,lastUserID         VARCHAR(64)                      NOT NULL
                ,lastUser           NVARCHAR(128)
                ,lastTime           DATETIME
                );/
                
                ALTER TABLE TActivityInfo ADD CONSTRAINT PK_TActivityInfo PRIMARY KEY (activityID);/
                
                EXEC P_TableComment  TActivityInfo                            ,'工作流活动组件(节点)信息表';/
                EXEC P_ColumnComment TActivityInfo ,activityID                ,'工作流活动ID';/
                EXEC P_ColumnComment TActivityInfo ,templateID                ,'工作流的模板ID';/
                EXEC P_ColumnComment TActivityInfo ,activityName              ,'活动名称';/
                EXEC P_ColumnComment TActivityInfo ,activityTypeID            ,'活动类型ID';/
                EXEC P_ColumnComment TActivityInfo ,x                         ,'位置x坐标值';/
                EXEC P_ColumnComment TActivityInfo ,y                         ,'位置y坐标值';/
                EXEC P_ColumnComment TActivityInfo ,z                         ,'位置z坐标值';/
                EXEC P_ColumnComment TActivityInfo ,height                    ,'图标高度';/
                EXEC P_ColumnComment TActivityInfo ,width                     ,'图标宽度';/
                EXEC P_ColumnComment TActivityInfo ,iconURL                   ,'图标路径';/
                EXEC P_ColumnComment TActivityInfo ,infoComment               ,'备注说明';/
                EXEC P_ColumnComment TActivityInfo ,createrID                 ,'创建人员ID';/
                EXEC P_ColumnComment TActivityInfo ,creater                   ,'创建人员名称';/
                EXEC P_ColumnComment TActivityInfo ,createTime                ,'创建时间';/
                EXEC P_ColumnComment TActivityInfo ,lastUserID                ,'最后修改人员ID';/
                EXEC P_ColumnComment TActivityInfo ,lastUser                  ,'最后修改人员名称';/
                EXEC P_ColumnComment TActivityInfo ,lastTime                  ,'最后修改时间';/
				]]>
			</content>
			
			<comment>工作流活动组件(节点)信息表</comment>
			<create>TActivityInfo</create>
			
		</sql>
		
		
		 
		<sql id="XSQL_Create_TActivityRoute">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TActivityRoute
                (
                 activityRouteID    VARCHAR2(64)                     NOT NULL
                ,activityRouteName  NVARCHAR2(128)                   NOT NULL
                ,templateID         VARCHAR2(64)                     NOT NULL
                ,routeTypeID        VARCHAR2(64)                     NOT NULL
                ,activityID         VARCHAR2(64)                     NOT NULL
                ,nextActivityID     VARCHAR2(64)                     NOT NULL
                ,conditionXJavaID   VARCHAR2(128)
                ,conditionMethod    VARCHAR2(64)
                ,conditionValue     VARCHAR2(500)
                ,conditionVType     NUMBER(2)
                ,infoComment        NVARCHAR2(2000)
                ,createrID          VARCHAR2(64)                     NOT NULL
                ,creater            NVARCHAR2(128)
                ,createTime         DATE                             NOT NULL
                ,lastUserID         VARCHAR2(64)                     NOT NULL
                ,lastUser           NVARCHAR2(128)
                ,lastTime           DATE
                );/
                
                ALTER TABLE TActivityRoute ADD CONSTRAINT PK_TActivityRoute PRIMARY KEY (activityRouteID);/
                
                COMMENT ON TABLE  TActivityRoute                          IS '工作流活动组件(节点)的路由表';/
                COMMENT ON COLUMN TActivityRoute.activityRouteID          IS '主键ID';/
                COMMENT ON COLUMN TActivityRoute.activityRouteName        IS '活动路由名称';/
                COMMENT ON COLUMN TActivityRoute.templateID               IS '工作流的模板ID';/
                COMMENT ON COLUMN TActivityRoute.routeTypeID              IS '路由类型ID';/
                COMMENT ON COLUMN TActivityRoute.activityID               IS '工作流活动ID';/
                COMMENT ON COLUMN TActivityRoute.nextActivityID           IS '下一活动ID。可以为不同工作流模板的活动。即支持子流程';/
                COMMENT ON COLUMN TActivityRoute.conditionXJavaID         IS '有条件判定时，执行的XJava对象ID';/
                COMMENT ON COLUMN TActivityRoute.conditionMethod          IS '有条件判定时，执行的对象方法名称';/
                COMMENT ON COLUMN TActivityRoute.conditionValue           IS '有条件判定时，方法执行结果的对比值';/
                COMMENT ON COLUMN TActivityRoute.conditionVType           IS '有条件判定时，对比值的数据类型（1:数字；2:布尔值；3:文本）';/
                COMMENT ON COLUMN TActivityRoute.infoComment              IS '备注说明';/
                COMMENT ON COLUMN TActivityRoute.createrID                IS '创建人员ID';/
                COMMENT ON COLUMN TActivityRoute.creater                  IS '创建人员名称';/
                COMMENT ON COLUMN TActivityRoute.createTime               IS '创建时间';/
                COMMENT ON COLUMN TActivityRoute.lastUserID               IS '最后修改人员ID';/
                COMMENT ON COLUMN TActivityRoute.lastUser                 IS '最后修改人员名称';/
                COMMENT ON COLUMN TActivityRoute.lastTime                 IS '最后修改时间';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TActivityRoute
                (
                 activityRouteID    VARCHAR(64)                     NOT NULL
                ,activityRouteName  NVARCHAR(128)                   NOT NULL
                ,templateID         VARCHAR(64)                     NOT NULL
                ,routeTypeID        VARCHAR(64)                     NOT NULL
                ,activityID         VARCHAR(64)                     NOT NULL
                ,nextActivityID     VARCHAR(64)                     NOT NULL
                ,conditionXJavaID   VARCHAR(128)
                ,conditionMethod    VARCHAR(64)
                ,conditionValue     VARCHAR(500)
                ,conditionVType     INT
                ,infoComment        NVARCHAR(2000)
                ,createrID          VARCHAR(64)                     NOT NULL
                ,creater            NVARCHAR(128)
                ,createTime         DATETIME                        NOT NULL
                ,lastUserID         VARCHAR(64)                     NOT NULL
                ,lastUser           NVARCHAR(128)
                ,lastTime           DATETIME
                );/
                
                ALTER TABLE TActivityRoute ADD CONSTRAINT PK_TActivityRoute PRIMARY KEY (activityRouteID);/
                
                EXEC P_TableComment  TActivityRoute                           ,'工作流活动组件(节点)的路由表';/
                EXEC P_ColumnComment TActivityRoute ,activityRouteID          ,'主键ID';/
                EXEC P_ColumnComment TActivityRoute ,activityRouteName        ,'活动路由名称';/
                EXEC P_ColumnComment TActivityRoute ,templateID               ,'工作流的模板ID';/
                EXEC P_ColumnComment TActivityRoute ,routeTypeID              ,'工作流路由类型ID';/
                EXEC P_ColumnComment TActivityRoute ,activityID               ,'工作流活动ID';/
                EXEC P_ColumnComment TActivityRoute ,nextActivityID           ,'下一活动ID。可以为不同工作流模板的活动。即支持子流程';/
                EXEC P_ColumnComment TActivityRoute ,conditionXJavaID         ,'有条件判定时，执行的XJava对象ID';/
                EXEC P_ColumnComment TActivityRoute ,conditionMethod          ,'有条件判定时，执行的对象方法名称';/
                EXEC P_ColumnComment TActivityRoute ,conditionValue           ,'有条件判定时，方法执行结果的对比值';/
                EXEC P_ColumnComment TActivityRoute ,conditionVType           ,'有条件判定时，对比值的数据类型（1:数字；2:布尔值；3:文本）';/
                EXEC P_ColumnComment TActivityRoute ,infoComment              ,'备注说明';/
                EXEC P_ColumnComment TActivityRoute ,createrID                ,'创建人员ID';/
                EXEC P_ColumnComment TActivityRoute ,creater                  ,'创建人员名称';/
                EXEC P_ColumnComment TActivityRoute ,createTime               ,'创建时间';/
                EXEC P_ColumnComment TActivityRoute ,lastUserID               ,'最后修改人员ID';/
                EXEC P_ColumnComment TActivityRoute ,lastUser                 ,'最后修改人员名称';/
                EXEC P_ColumnComment TActivityRoute ,lastTime                 ,'最后修改时间';/
				]]>
			</content>
			
			<comment>工作流活动组件(节点)的路由表</comment>
			<create>TActivityRoute</create>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TActivityParticipants">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TActivityParticipants
                (
                 participantID      VARCHAR2(64)                     NOT NULL
                ,templateID         VARCHAR2(64)                     NOT NULL
                ,activityID         VARCHAR2(64)                     NOT NULL
                ,objectType         NUMBER(2)                        NOT NULL
                ,objectID           VARCHAR2(64)                     NOT NULL
                ,objectName         NVARCHAR2(128)
                ,objectNo           NUMBER(10)                       NOT NULL
                ,createrID          VARCHAR2(64)                     NOT NULL
                ,creater            NVARCHAR2(128)
                ,createTime         DATE                             NOT NULL
                );/
                
                ALTER TABLE TActivityParticipants ADD CONSTRAINT PK_TActivityParticipants PRIMARY KEY (participantID);/
                
                COMMENT ON TABLE  TActivityParticipants                    IS '工作流过程的实际参与人';/
                COMMENT ON COLUMN TActivityParticipants.participantID      IS '主键ID';/
                COMMENT ON COLUMN TActivityParticipants.templateID         IS '工作流的模板ID';/
                COMMENT ON COLUMN TActivityParticipants.activityID         IS '活动（节点）ID';/
                COMMENT ON COLUMN TActivityParticipants.objectType         IS '参与者类型（1:执行人；2:执行部门；3:执行角色；11:抄送人；12:抄送部门；13:抄送角色）';/
                COMMENT ON COLUMN TActivityParticipants.objectID           IS '参与者ID';/
                COMMENT ON COLUMN TActivityParticipants.objectName         IS '参与者名称';/
                COMMENT ON COLUMN TActivityParticipants.objectNo           IS '参与者序号，表示前后顺序。系统自动生成，下标从1开始';/
                COMMENT ON COLUMN TActivityParticipants.createrID          IS '创建人员ID';/
                COMMENT ON COLUMN TActivityParticipants.creater            IS '创建人员名称';/
                COMMENT ON COLUMN TActivityParticipants.createTime         IS '创建时间';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TActivityParticipants
                (
                 participantID      VARCHAR(64)                     NOT NULL
                ,templateID         VARCHAR(64)                     NOT NULL
                ,activityID         VARCHAR(64)                     NOT NULL
                ,objectType         INT                             NOT NULL
                ,objectID           VARCHAR(64)                     NOT NULL
                ,objectName         NVARCHAR(128)
                ,objectNo           INT                             NOT NULL
                ,createrID          VARCHAR(64)                     NOT NULL
                ,creater            NVARCHAR(128)
                ,createTime         DATETIME                        NOT NULL
                );/
                
                ALTER TABLE TActivityParticipants ADD CONSTRAINT PK_TActivityParticipants PRIMARY KEY (participantID);/
                
                EXEC P_TableComment  TActivityParticipants                     ,'工作流活动组件(节点)路由的参与人';/
                EXEC P_ColumnComment TActivityParticipants ,participantID      ,'主键ID';/
                EXEC P_ColumnComment TActivityParticipants ,templateID         ,'工作流的模板ID';/
                EXEC P_ColumnComment TActivityParticipants ,activityID         ,'活动（节点）ID';/
                EXEC P_ColumnComment TActivityParticipants ,objectType         ,'参与者类型（1:执行人；2:执行部门；3:执行角色；11:抄送人；12:抄送部门；13:抄送角色）';/
                EXEC P_ColumnComment TActivityParticipants ,objectID           ,'参与者ID';/
                EXEC P_ColumnComment TActivityParticipants ,objectName         ,'参与者名称';/
                EXEC P_ColumnComment TActivityParticipants ,objectNo           ,'参与者序号，表示前后顺序。系统自动生成，下标从1开始';/
                EXEC P_ColumnComment TActivityParticipants ,createrID          ,'创建人员ID';/
                EXEC P_ColumnComment TActivityParticipants ,creater            ,'创建人员名称';/
                EXEC P_ColumnComment TActivityParticipants ,createTime         ,'创建时间';/
				]]>
			</content>
			
			<comment>工作流活动组件(节点)的参与人</comment>
			<create>TActivityParticipants</create>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TActivityRouteParticipants">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TActivityRouteParticipants
                (
                 participantID      VARCHAR2(64)                     NOT NULL
                ,templateID         VARCHAR2(64)                     NOT NULL
                ,activityRouteID    VARCHAR2(64)                     NOT NULL
                ,objectType         NUMBER(2)                        NOT NULL
                ,objectID           VARCHAR2(64)                     NOT NULL
                ,objectName         NVARCHAR2(128)
                ,objectNo           NUMBER(10)                       NOT NULL
                ,createrID          VARCHAR2(64)                     NOT NULL
                ,creater            NVARCHAR2(128)
                ,createTime         DATE                             NOT NULL
                );/
                
                ALTER TABLE TActivityRouteParticipants ADD CONSTRAINT PK_TActivityRouteParticipants PRIMARY KEY (participantID);/
                
                COMMENT ON TABLE  TActivityRouteParticipants                    IS '工作流过程的实际参与人';/
                COMMENT ON COLUMN TActivityRouteParticipants.participantID      IS '主键ID';/
                COMMENT ON COLUMN TActivityRouteParticipants.templateID         IS '工作流的模板ID';/
                COMMENT ON COLUMN TActivityRouteParticipants.activityRouteID    IS '活动路由ID';/
                COMMENT ON COLUMN TActivityRouteParticipants.objectType         IS '参与者类型（1:执行人；2:执行部门；3:执行角色；11:抄送人；12:抄送部门；13:抄送角色）';/
                COMMENT ON COLUMN TActivityRouteParticipants.objectID           IS '参与者ID';/
                COMMENT ON COLUMN TActivityRouteParticipants.objectName         IS '参与者名称';/
                COMMENT ON COLUMN TActivityRouteParticipants.objectNo           IS '参与者序号，表示前后顺序。系统自动生成，下标从1开始';/
                COMMENT ON COLUMN TActivityRouteParticipants.createrID          IS '创建人员ID';/
                COMMENT ON COLUMN TActivityRouteParticipants.creater            IS '创建人员名称';/
                COMMENT ON COLUMN TActivityRouteParticipants.createTime         IS '创建时间';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TActivityRouteParticipants
                (
                 participantID      VARCHAR(64)                     NOT NULL
                ,templateID         VARCHAR(64)                     NOT NULL
                ,activityRouteID    VARCHAR(64)                     NOT NULL
                ,objectType         INT                             NOT NULL
                ,objectID           VARCHAR(64)                     NOT NULL
                ,objectName         NVARCHAR(128)
                ,objectNo           INT                             NOT NULL
                ,createrID          VARCHAR(64)                     NOT NULL
                ,creater            NVARCHAR(128)
                ,createTime         DATETIME                        NOT NULL
                );/
                
                ALTER TABLE TActivityRouteParticipants ADD CONSTRAINT PK_TActivityRouteParticipants PRIMARY KEY (participantID);/
                
                EXEC P_TableComment  TActivityRouteParticipants                     ,'工作流活动组件(节点)路由的参与人';/
                EXEC P_ColumnComment TActivityRouteParticipants ,participantID      ,'主键ID';/
                EXEC P_ColumnComment TActivityRouteParticipants ,templateID         ,'工作流的模板ID';/
                EXEC P_ColumnComment TActivityRouteParticipants ,activityRouteID    ,'活动路由ID';/
                EXEC P_ColumnComment TActivityRouteParticipants ,objectType         ,'参与者类型（1:执行人；2:执行部门；3:执行角色；11:抄送人；12:抄送部门；13:抄送角色）';/
                EXEC P_ColumnComment TActivityRouteParticipants ,objectID           ,'参与者ID';/
                EXEC P_ColumnComment TActivityRouteParticipants ,objectName         ,'参与者名称';/
                EXEC P_ColumnComment TActivityRouteParticipants ,objectNo           ,'参与者序号，表示前后顺序。系统自动生成，下标从1开始';/
                EXEC P_ColumnComment TActivityRouteParticipants ,createrID          ,'创建人员ID';/
                EXEC P_ColumnComment TActivityRouteParticipants ,creater            ,'创建人员名称';/
                EXEC P_ColumnComment TActivityRouteParticipants ,createTime         ,'创建时间';/
				]]>
			</content>
			
			<comment>工作流活动组件(节点)路由的参与人</comment>
			<create>TActivityRouteParticipants</create>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TActivityType_Init_Insert">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content>
				<![CDATA[
                INSERT  INTO TActivityType(activityTypeID ,activityType ,orderNo) VALUES('AT000' ,'开始' ,0);/
                INSERT  INTO TActivityType(activityTypeID ,activityType ,orderNo) VALUES('AT001' ,'常规' ,1);/
                INSERT  INTO TActivityType(activityTypeID ,activityType ,orderNo) VALUES('AT999' ,'结束' ,999);/
				]]>
			</content>
			
			<comment>工作流活动(节点)类型表的初始化数据</comment>
			
		</sql>
		
		
		
		<!-- 活动类型有：开始、结束、转派、分派、汇签、驳回、追回、回退、催办、限时自动流、自由流 -->
		<sql id="XSQL_Create_TActivityType">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TActivityType
                (
                 activityTypeID     VARCHAR2(64)                     NOT NULL
                ,activityType       NVARCHAR2(128)                   NOT NULL
                ,infoComment        NVARCHAR2(2000)
                ,orderNo            NUMBER(10)
                );/
                
                ALTER TABLE TActivityType ADD CONSTRAINT PK_TActivityType PRIMARY KEY (activityTypeID);/
                
                COMMENT ON TABLE  TActivityType                           IS '工作流活动(节点)类型';/
                COMMENT ON COLUMN TActivityType.activityTypeID            IS '工作流活动类型ID';/
                COMMENT ON COLUMN TActivityType.activityType              IS '工作流活动类型名称';/
                COMMENT ON COLUMN TActivityType.infoComment               IS '备注说明';/
                COMMENT ON COLUMN TActivityType.orderNo                   IS '排列顺序';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TActivityType
                (
                 activityTypeID     VARCHAR(64)                     NOT NULL
                ,activityType       NVARCHAR(128)                   NOT NULL
                ,infoComment        NVARCHAR(2000)
                ,orderNo            INT
                );/
                
                ALTER TABLE TActivityType ADD CONSTRAINT PK_TActivityType PRIMARY KEY (activityTypeID);/
                
                EXEC P_TableComment  TActivityType                            ,'工作流活动(节点)类型';/
                EXEC P_ColumnComment TActivityType ,activityTypeID            ,'工作流活动类型ID';/
                EXEC P_ColumnComment TActivityType ,activityType              ,'工作流活动类型名称';/
                EXEC P_ColumnComment TActivityType ,infoComment               ,'备注说明';/
                EXEC P_ColumnComment TActivityType ,orderNo                   ,'排列顺序';/
				]]>
			</content>
			
			<trigger>
				<create ref="XSQL_Create_TActivityType_Init_Insert"/>
			</trigger>
			
			<comment>工作流活动(节点)类型</comment>
			<create>TActivityType</create>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TRouteType_Init_Insert">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content>
				<![CDATA[
                INSERT  INTO TRouteType(routeTypeID ,routeType ,orderNo) VALUES('RT001' ,'转派'      ,1);/
                INSERT  INTO TRouteType(routeTypeID ,routeType ,orderNo) VALUES('RT002' ,'分派'      ,2);/
                INSERT  INTO TRouteType(routeTypeID ,routeType ,orderNo) VALUES('RT003' ,'汇签'      ,3);/
                INSERT  INTO TRouteType(routeTypeID ,routeType ,orderNo) VALUES('RT020' ,'驳回'      ,20);/
                INSERT  INTO TRouteType(routeTypeID ,routeType ,orderNo) VALUES('RT021' ,'追回'      ,21);/
                INSERT  INTO TRouteType(routeTypeID ,routeType ,orderNo) VALUES('RT022' ,'回退'      ,22);/
                INSERT  INTO TRouteType(routeTypeID ,routeType ,orderNo) VALUES('RT030' ,'催办'      ,30);/
                INSERT  INTO TRouteType(routeTypeID ,routeType ,orderNo) VALUES('RT050' ,'限时自动流' ,50);/
                INSERT  INTO TRouteType(routeTypeID ,routeType ,orderNo) VALUES('RT051' ,'自由流'     ,51);/
                INSERT  INTO TRouteType(routeTypeID ,routeType ,orderNo) VALUES('RT999' ,'结束'      ,999);/
				]]>
			</content>
			
			<comment>工作流路由类型的初始化数据</comment>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TRouteType">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TRouteType
                (
                 routeTypeID        VARCHAR2(64)                     NOT NULL
                ,routeType          NVARCHAR2(128)                   NOT NULL
                ,infoComment        NVARCHAR2(2000)
                ,orderNo            NUMBER(10)
                );/
                
                ALTER TABLE TRouteType ADD CONSTRAINT PK_TRouteType PRIMARY KEY (routeTypeID);/
                
                COMMENT ON TABLE  TRouteType                           IS '工作流路由类型';/
                COMMENT ON COLUMN TRouteType.routeTypeID               IS '工作流路由类型ID';/
                COMMENT ON COLUMN TRouteType.routeType                 IS '工作流路由类型名称';/
                COMMENT ON COLUMN TRouteType.infoComment               IS '备注说明';/
                COMMENT ON COLUMN TRouteType.orderNo                   IS '排列顺序';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TRouteType
                (
                 routeTypeID        VARCHAR(64)                     NOT NULL
                ,routeType          NVARCHAR(128)                   NOT NULL
                ,infoComment        NVARCHAR(2000)
                ,orderNo            INT
                );/
                
                ALTER TABLE TRouteType ADD CONSTRAINT PK_TRouteType PRIMARY KEY (routeTypeID);/
                
                EXEC P_TableComment  TRouteType                            ,'工作流路由类型';/
                EXEC P_ColumnComment TRouteType ,routeTypeID               ,'工作流路由类型ID';/
                EXEC P_ColumnComment TRouteType ,routeType                 ,'工作流路由类型名称';/
                EXEC P_ColumnComment TRouteType ,infoComment               ,'备注说明';/
                EXEC P_ColumnComment TRouteType ,orderNo                   ,'排列顺序';/
				]]>
			</content>
			
			<trigger>
				<create ref="XSQL_Create_TRouteType_Init_Insert"/>
			</trigger>
			
			<comment>工作流路由类型</comment>
			<create>TRouteType</create>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TParticipantType_Init_Insert">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content>
				<![CDATA[
                INSERT  INTO TParticipantType(participantTypeID ,participantType ,orderNo) VALUES(1  ,'执行人'   ,1);/
                INSERT  INTO TParticipantType(participantTypeID ,participantType ,orderNo) VALUES(2  ,'执行部门' ,2);/
                INSERT  INTO TParticipantType(participantTypeID ,participantType ,orderNo) VALUES(3  ,'执行角色' ,3);/
                INSERT  INTO TParticipantType(participantTypeID ,participantType ,orderNo) VALUES(11 ,'抄送人'   ,11);/
                INSERT  INTO TParticipantType(participantTypeID ,participantType ,orderNo) VALUES(12 ,'抄送部门' ,12);/
                INSERT  INTO TParticipantType(participantTypeID ,participantType ,orderNo) VALUES(13 ,'抄送角色' ,13);/
				]]>
			</content>
			
			<comment>参与人类型的初始化数据</comment>
			
		</sql>
		
		
		
		<sql id="XSQL_Create_TParticipantType">
		
			<dataSourceGroup ref="DSG_XFlow" />
			
			<content if="ORACLE == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TParticipantType
                (
                 participantTypeID  NUMBER(2)                        NOT NULL
                ,participantType    NVARCHAR2(128)                   NOT NULL
                ,infoComment        NVARCHAR2(2000)
                ,orderNo            NUMBER(10)
                );/
                
                ALTER TABLE TParticipantType ADD CONSTRAINT PK_TParticipantType PRIMARY KEY (participantTypeID);/
                
                COMMENT ON TABLE  TParticipantType                     IS '参与人类型';/
                COMMENT ON COLUMN TParticipantType.participantTypeID   IS '参与人类型ID';/
                COMMENT ON COLUMN TParticipantType.participantType     IS '参与人类型名称';/
                COMMENT ON COLUMN TParticipantType.infoComment         IS '备注说明';/
                COMMENT ON COLUMN TParticipantType.orderNo             IS '排列顺序';/
				]]>
			</content>
			
			<content if="SQLSERVER == DSG_XFlow.getDbProductType">
				<![CDATA[
                CREATE TABLE TParticipantType
                (
                 participantTypeID  INT                             NOT NULL
                ,participantType    NVARCHAR(128)                   NOT NULL
                ,infoComment        NVARCHAR(2000)
                ,orderNo            INT
                );/
                
                ALTER TABLE TParticipantType ADD CONSTRAINT PK_TParticipantType PRIMARY KEY (participantTypeID);/
                
                EXEC P_TableComment  TParticipantType                     ,'参与人类型';/
                EXEC P_ColumnComment TParticipantType ,participantTypeID  ,'参与人类型ID';/
                EXEC P_ColumnComment TParticipantType ,participantType    ,'参与人类型名称';/
                EXEC P_ColumnComment TParticipantType ,infoComment        ,'备注说明';/
                EXEC P_ColumnComment TParticipantType ,orderNo            ,'排列顺序';/
				]]>
			</content>
			
			<trigger>
				<create ref="XSQL_Create_TParticipantType_Init_Insert"/>
			</trigger>
			
			<comment>参与人类型</comment>
			<create>TParticipantType</create>
			
		</sql>
		
	</sqls>
	
</config>